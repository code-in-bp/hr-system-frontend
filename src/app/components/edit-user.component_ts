import { Component, OnInit, ViewChild } from "@angular/core";
import { ActivatedRoute, Router } from "@angular/router";
import { UserService } from "../services/user.service";

@Component({
  selector: "app-user-edit",
  template: `
    <div class="container-flex">
      <div class="row ds-banner-row">
        <div class="col-md-6">
          <h4>Edit User Profile</h4>
        </div>

        <div class="col-md-6">
          <div class="row">
            <div class="col-md-12"></div>
          </div>
        </div>
      </div>
    </div>
    <div class="container-fluid ds-form-container">
      <div class="row">
        <div class="col-md-12">
          <p class="ds-custom-p">User Profile Form</p>
        </div>
      </div>

      <!-- <form #f="ngForm" novalidate (ngSubmit)="f.form.valid && onSubmit()"> -->
      <form #f="ngForm" novalidate (ngSubmit)="f.form.valid && onSubmit()">
        <div class="container">
          <div class="row">
            <div class="col-md-12">
              <input
                type="hidden"
                class="form-control"
                required
                name="id"
                [(ngModel)]="user.id"
                value=""
              />

              <div class="form-group">
                <label>Last Name</label>

                <input
                  type="text"
                  class="form-control"
                  #firstNamevalid="ngModel"
                  required
                  name="firstName"
                  [(ngModel)]="user.firstName"
                  value=""
                />

                <div
                  *ngIf="
                    firstNamevalid.errors &&
                    (firstNamevalid.dirty || firstNamevalid.touched)
                  "
                >
                  <p class="text-danger" *ngIf="firstNamevalid.errors.required">
                    First Name is required
                  </p>
                </div>
              </div>

              <div class="form-group">
                <label>Last Name</label>

                <input
                  type="text"
                  class="form-control"
                  #lastNamevalid="ngModel"
                  required
                  name="lastName"
                  [(ngModel)]="user.lastName"
                  value=""
                />

                <div
                  *ngIf="
                    lastNamevalid.errors &&
                    (lastNamevalid.dirty || lastNamevalid.touched)
                  "
                >
                  <small
                    class="text-danger"
                    *ngIf="lastNamevalid.errors.required"
                    >Last Name is required</small
                  >
                </div>
              </div>

              <div class="form-group">
                <label>Email</label>

                <input
                  #emailvalid="ngModel"
                  [(ngModel)]="user.email"
                  type="email"
                  class="form-control"
                  required
                  name="email"
                  value=""
                />
                <div
                  *ngIf="
                    emailvalid.errors &&
                    (emailvalid.dirty || emailvalid.touched)
                  "
                >
                  <small class="text-danger" *ngIf="emailvalid.errors.required"
                    >Email is required</small
                  >
                </div>
              </div>

              <div class="form-group">
                <label>Phone</label>

                <input
                  #phonevalid="ngModel"
                  [(ngModel)]="user.phone"
                  type="text"
                  class="form-control"
                  required
                  name="phone"
                  placeholder="0036 xx xxx xxxx"
                  value=""
                />
                <div
                  *ngIf="
                    phonevalid.errors &&
                    (phonevalid.dirty || phonevalid.touched)
                  "
                >
                  <small class="text-danger" *ngIf="phonevalid.errors.required"
                    >Phone is required</small
                  >
                </div>
              </div>

              <div class="form-group">
                <label>About</label>

                <textarea
                  #aboutvalid="ngModel"
                  [(ngModel)]="user.about"
                  class="form-control"
                  name="about"
                  required
                  ng-model="aboutTextArea"
                ></textarea>
                <div
                  *ngIf="
                    aboutvalid.errors &&
                    (aboutvalid.dirty || aboutvalid.touched)
                  "
                >
                  <small class="text-danger" *ngIf="aboutvalid.errors.required"
                    >About is required</small
                  >
                </div>
              </div>

              <div class="form-group">
              <label>Birthday</label>
                <div class="input-group">

                  <input
                    #birthdayvalid="ngModel"
                    [(ngModel)]="user.birthday"                    
                    class="form-control"
                    placeholder="yyyy-mm-dd"
                    name="birthday"
                    required
                    
                  />

                  <!-- <div class="input-group-append">
                    <button
                      class="btn btn-outline-secondary calendar"
                      (click)="d.toggle()"
                      type="button"
                    ></button>
                  </div> -->
                </div>
                <div *ngIf="birthdayvalid.errors && (birthdayvalid.dirty || birthdayvalid.touched)">
              <small  class="text-danger" *ngIf="birthdayvalid.errors.required">Birthday is required</small>
            </div> 

              </div>

              <div class="form-group">
                <label>Avatar</label>

                <select
                  #avatarvalid="ngModel"
                  [(ngModel)]="user.avatar"
                  class="form-control"
                  name="avatar"
                  required
                >
                  <!-- [(ngModel)]="languages"
                    multiple-->
                  <option class="hidden" value="" disabled selected>
                    Select Avatar
                  </option>
                  <option
                    value="assets/user-solid.svg"
                    style="background-image:url(assets/user-solid.svg);"
                  >
                    avatar 1
                  </option>
                  <option
                    value="assets/user-circle-solid.svg"
                    style="background-image:url(assets/user-circle-solid.svg);"
                  >
                    avatar 2
                  </option>
                  <option
                    value="assets/user-tie-solid.svg"
                    style="background-image:url(assets/user-tie-solid.svg);"
                  >
                    avatar 3
                  </option>
                </select>
                <div
                  *ngIf="
                    avatarvalid.errors &&
                    (avatarvalid.dirty || avatarvalid.touched)
                  "
                >
                  <small class="text-danger" *ngIf="avatarvalid.errors.required"
                    >Avatar is required</small
                  >
                </div>
              </div>
            </div>
          </div>
        </div>

        <div class="container">
          <div class="row ">
            <div class="col-md-6 col-md-sm">
              <button class="ds-cancel-button btn" routerLink="/">
                Cancel
              </button>
            </div>

            <div class="col-md-6 col-md-sm">
              <div class="row">
                <div class="col-md-12 col-sm-12">
                  <button
                    [disabled]="f.invalid"
                    type="submit"
                    class="btn btn-primary"
                    style="width: 100%; border:none; border-radius: 0px;"
                    value="Update"
                  >
                    Update
                  </button>
                </div>
              </div>
            </div>
          </div>
        </div>
      </form>
    </div>
  `,
})
export class UserEditComponent implements OnInit {
  user: any;
  id: any;
  constructor(
    private _Activatedroute: ActivatedRoute,
    private userService: UserService,
    private router: Router
  ) {}
  @ViewChild("f") form: any;

  ngOnInit() {
    this.id = this._Activatedroute.snapshot.params["id"];
    let users = this.userService.getUsers();
    this.user = users.find((p: any) => p.id == this.id);
    console.log(this.user);
  }
  onSubmit() {
    if (this.form.value) {
      console.log(this.form.value);
      this.userService.updateUser(this.user, this.form.value);
      this.router.navigate(["users", this.form.value.id]);
    }
  }
}
